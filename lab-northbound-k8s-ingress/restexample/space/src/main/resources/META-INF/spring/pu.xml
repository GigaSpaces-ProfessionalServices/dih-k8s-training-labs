<?xml version="1.0" encoding="UTF-8"?>
<!--
    top level element of the Spring configuration. Note the multiple namespace definition for both
    GigaSpaces and Spring. You can simply copy and paste this portion of the pu.xml file
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:os-core="http://www.openspaces.org/schema/core"
    xmlns:os-events="http://www.openspaces.org/schema/events"
    xmlns:os-remoting="http://www.openspaces.org/schema/remoting"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.openspaces.org/schema/core http://www.openspaces.org/schema/core/openspaces-core.xsd
    http://www.openspaces.org/schema/events http://www.openspaces.org/schema/events/openspaces-events.xsd
    http://www.openspaces.org/schema/remoting http://www.openspaces.org/schema/remoting/openspaces-remoting.xsd">


    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="properties">
            <props>
                <prop key="space.name">demo</prop>
            </props>
        </property>
    </bean>

    <!-- Enables to configure Spring beans through annotations   -->
    <context:annotation-config />

    <!-- Enable OpenSpaces core annotation support. -->
    <os-core:annotation-support />

    <!-- Enables using @Polling and @Notify annotations to creating polling and notify containers  -->
    <os-events:annotation-support />

    <!-- Enables using @RemotingService and other remoting related annotations   -->
    <os-remoting:annotation-support />

    <!--
        A bean representing a Space. Here we configure an embedded space. Note
        that we do not specify here the cluster topology of the Space. It is
        declared by the os-sla:sla element of this pu.xml file.
    -->
    <os-core:embedded-space id="space" space-name="${space.name}">
        <os-core:properties>
            <props>
                <!-- ALL IN CACHE -->
                <prop key="space-config.engine.cache_policy">1</prop>
                <prop key="space-config.engine.memory_usage.high_watermark_percentage">97</prop>
                <prop key="space-config.engine.memory_usage.write_only_block_percentage">96</prop>
                <prop key="space-config.engine.memory_usage.write_only_check_percentage">95</prop>
                <prop key="space-config.engine.memory_usage.low_watermark_percentage">94</prop>
                <prop key="space-config.engine.memory_usage.gc-before-shortage">false</prop>
            </props>
        </os-core:properties>
    </os-core:embedded-space>

    <!-- Defines a distributed transaction manager.-->
    <os-core:distributed-tx-manager id="transactionManager" />

    <!-- Define the GigaSpace instance that the application will use to access the space  -->
    <os-core:giga-space id="gigaSpace" space="space" tx-manager="transactionManager" />

</beans>
